name: Build for Windows

on:
  push:
    branches: [ CI ]
env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    name: "Build: ${{ matrix.arch }}"
    runs-on: windows-2022
    strategy:
      fail-fast: false
      matrix:
        arch:
          - win64

    steps:
    - name: Checkout Git Repo
      uses: actions/checkout@v3
      with:
        submodules: 'recursive'

    - name: Install Qt
      uses: jurplel/install-qt-action@v3
      with:
        aqtversion: '==3.1.*'
        py7zrversion: '>=0.20.2'
        version: '6.4.3'
        host: 'windows'
        target: 'desktop'
        arch: '${{ matrix.arch }}_mingw'
        tools: 'tools_cmake tools_ninja'
        #modules: 'qt3d qtactiveqt qtcharts qtconnectivity qtdatavis3d qthttpserver qtimageformats qtlanguageserver qtlottie qtmultimedia qtnetworkauth qtpositioning qtquick3dphysics qtremoteobjects qtscxml qtsensors qtserialbus qtserialport qtspeech qtvirtualkeyboard qtwebchannel qtwebsockets qtwebview debug_info qt5compat qtquick3d qtquicktimeline qtshadertools'
        modules: 'qtcharts qtnetworkauth qtserialport'
  
#    - name: Qt6 environment configuration
#      if: ${{ startsWith( matrix.qt_ver, 6 ) }}
#      shell: pwsh
#      run: |
#          Write-Output "${{ env.Qt6_DIR }}/bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
#          Write-Output "${{ env.Qt6_DIR }}/../../Tools/${{ matrix.qt_tools_mingw_install }}/bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
      
#    - name: where is cmake & where is mingw32-make
#      shell: pwsh
#      run: |
#          Get-Command -Name 'cmake' | Format-List
#          Get-Command -Name 'mingw32-make' | Format-List

    - name: Build scg_studio_qt
      run: |
        cd src_qt
        mkdir build
        cd build
        cmake -DCMAKE_MESSAGE_LOG_LEVEL=STATUS -DCMAKE_PREFIX_PATH=${{ env.Qt6_DIR }} -DCMAKE_C_COMPILER=gcc -DCMAKE_CXX_COMPILER=g++ -DCMAKE_BUILD_TYPE=Release -GNinja ..
        cmake --build . --target all --config Release --parallel
        mkdir scg_studio_qt
        dir
        mv ./scg_studio.exe scg_studio_qt/
        windeployqt scg_studio_qt/scg_studio.exe

    - name: Upload zip
      uses: actions/upload-artifact@v3
      with:
          name: scg_studio_qt-${{ matrix.arch }}
          # Use a wildcard to force a subfolder
          path: ${{ github.workspace }}/src_qt/build/scg_studio_qt
          if-no-files-found: error
