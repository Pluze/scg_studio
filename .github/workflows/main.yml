name: Build for Windows

on:
  push:
    branches: [ CI ]
env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    name: "Build: ${{ matrix.arch }}"
    runs-on: windows-2022
    strategy:
      fail-fast: false
      matrix:
        arch:
          - win64

    steps:
    - name: Checkout Git Repo
      uses: actions/checkout@v3
      with:
        submodules: 'recursive'

    - name: Install Qt
      uses: jurplel/install-qt-action@v3
      with:
        aqtversion: '==3.1.*'
        py7zrversion: '>=0.20.2'
        version: '6.4.3'
        host: 'windows'
        target: 'desktop'
        arch: '${{ matrix.arch }}_mingw'
        modules: 'qt3d qtactiveqt qtcharts qtconnectivity qtdatavis3d qthttpserver qtimageformats qtlanguageserver qtlottie qtmultimedia qtnetworkauth qtpositioning qtquick3dphysics qtremoteobjects qtscxml qtsensors qtserialbus qtserialport qtspeech qtvirtualkeyboard qtwebchannel qtwebsockets qtwebview debug_info qt5compat qtquick3d qtquicktimeline qtshadertools'

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}
      
    - name: Build scg_studio_qt
      run: |
        dir
        cd src_qt\
        dir
        mkdir build
        cd build
        cmake --build .\build --config ${{env.BUILD_TYPE}} --target all
        mkdir scg_studio_qt
        mv release/scg_studio.exe scg_studio_qt/
        windeployqt scg_studio_qt/scg_studio.exe

    - name: Upload zip
      uses: actions/upload-artifact@v3
      with:
          name: scg_studio_qt-${{ matrix.arch }}
          # Use a wildcard to force a subfolder
          path: "build/*-emu/"
          if-no-files-found: error
